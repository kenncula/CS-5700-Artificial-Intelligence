class: "OutputTest"
success: "PASS"
failure: "NO PASS"

# Python statements initializing variables for the test below.
preamble: """
from test_world import create_world
from pose import Pose
from search_graph import SearchGraph, Node
from rrt import RRTPlannerPolygon

world = create_world()
planner_config_rrt = {
    "world": world,
    "rrt_connect": False,
    "rrt_star": False,
    "collision_check_step_dist": 0.025,
    "max_connection_dist": 0.5,
    "rewire_radius": 1.5,
}
planner_config_rrt_connect = {
    "world": world,
    "rrt_connect": True,
    "rrt_star": False,
    "collision_check_step_dist": 0.025,
    "max_connection_dist": 0.5,
    "rewire_radius": 1.5,
}
rrt_planner = RRTPlannerPolygon(**planner_config_rrt)
rrt_connect_planner = RRTPlannerPolygon(**planner_config_rrt_connect)

r1 = Pose(-1, -1)
point1 = Pose(-2, 1)
point2 = Pose(-3, -4)
point3 = Pose(0, 3)
point4 = Pose(-2.2, -2.81)
point5 = Pose(0, 3)
point6 = Pose(-2, 1.4)
point_list = [point1, point2, point3, point4, point5, point6]
ans = "Pass"
for p in point_list:
    path1 = rrt_planner.plan(r1, p)
    path1_connect = rrt_connect_planner.plan(r1, p)
    if rrt_connect_planner.nodes_sampled >= rrt_planner.nodes_sampled:
        ans = "Your version of RRT connect doesn't improve the efficiency in sampling"
"""

# A python expression to be evaluated.  This expression must return the 
# same result for the student and instructor's code.

test: "ans"

